#!/bin/python3
import numpy as np
import os
import subprocess



samples = 20
# for learning rates, 10^-5 --> 10^-2 choose random numbers between 2 and 5
# np.random.rand returns values [0, 1)
lr_exponent = 2 + np.random.rand(samples)*3
lr = np.power(10, -lr_exponent)
# beta ranges from 10^-5 - 10^2
# beta for image reconstruction
beta_exponent = -1 + np.random.rand(samples)*6
beta_im = np.power(10, -beta_exponent)
# beta for group encoder
beta_exponent = -1 + np.random.rand(samples)*6
beta_group = np.power(10, -beta_exponent)

params = zip(lr, beta_im, beta_group)


for data in [ 'poly5_seq_v3' ]:
  for arch in [ 'group_action_vae0' ]:
    for num in range(1):
      for l,bim,bg in params:
        name='{}-{}-lr-{:.4e}-bim-{:.4e}-bg-{:.4e}-{}'.format(data[-2:], arch[-5:], l, bim, bg, num)
        name = name.replace('_','-')
        name = name.replace('.','-')
        name = name.replace('+','')
        print('save-{}'.format(name))
        # Build command with hyperparameters specificed
        kcreator_cmd = [
          'kcreator',
          '-g','1' ,
          '--job-name', '{}'.format(name),
          '-i', 'chaneyk/tensorflow:a4f7556-py3',
          '-w', '/NAS/home/group_encoders',
          '-Ti','-X',
          '-nc','1',
          '--',
          'python3', 'train.py',
          '--save_dir=save/save-{}'.format(name),
          '--dataset={}'.format(data),
          '--architecture={}'.format(arch),
          '--beta={}'.format(bim),
          '--beta_trans={}'.format(bg),
          '--learning_rate={}'.format(l),
          '--optimizer_type=adam',
          '--learning_rate_decay_type=fixed',
          '--batch_size=64',
          '--train_time=55',
          '--test_freq=5',
          '--save_interval_secs=598',
        ]
        # Create yaml file
        kubectl_create_cmd = [ 'kubectl', 'create', '-f', '{}.yaml'.format(name) ]
        # Run commands in shell
        subprocess.call(kcreator_cmd)
        # print('kcreator_cmd', kcreator_cmd)
        subprocess.call(kubectl_create_cmd)
        # print('kubectl_create_cmd', kubectl_create_cmd)

get_pods_cmd = [ 'kubectl', 'get', 'pods' ]
# Run commands in shell
subprocess.call(get_pods_cmd)


